<?php

namespace DoctrineORMModule\Proxy\__CG__\User\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \User\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setId($uid)
    {
        $this->__load();
        return parent::setId($uid);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setFirstname($firstname)
    {
        $this->__load();
        return parent::setFirstname($firstname);
    }

    public function getFirstname()
    {
        $this->__load();
        return parent::getFirstname();
    }

    public function setLastname($lastname)
    {
        $this->__load();
        return parent::setLastname($lastname);
    }

    public function getLastname()
    {
        $this->__load();
        return parent::getLastname();
    }

    public function setNickname($nickname)
    {
        $this->__load();
        return parent::setNickname($nickname);
    }

    public function getNickname()
    {
        $this->__load();
        return parent::getNickname();
    }

    public function setUsername($name)
    {
        $this->__load();
        return parent::setUsername($name);
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function setPassword($lastname)
    {
        $this->__load();
        return parent::setPassword($lastname);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setGenerated($password)
    {
        $this->__load();
        return parent::setGenerated($password);
    }

    public function getGenerated()
    {
        $this->__load();
        return parent::getGenerated();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setSex($sex)
    {
        $this->__load();
        return parent::setSex($sex);
    }

    public function getSex()
    {
        $this->__load();
        return parent::getSex();
    }

    public function setBirthday($datetime)
    {
        $this->__load();
        return parent::setBirthday($datetime);
    }

    public function getBirthday()
    {
        $this->__load();
        return parent::getBirthday();
    }

    public function setAnonym($anonym)
    {
        $this->__load();
        return parent::setAnonym($anonym);
    }

    public function getAnonym()
    {
        $this->__load();
        return parent::getAnonym();
    }

    public function isAnonym()
    {
        $this->__load();
        return parent::isAnonym();
    }

    public function setVerifyString($verify)
    {
        $this->__load();
        return parent::setVerifyString($verify);
    }

    public function getVerifyString()
    {
        $this->__load();
        return parent::getVerifyString();
    }

    public function setCreated($datetime)
    {
        $this->__load();
        return parent::setCreated($datetime);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setEdit($datetime)
    {
        $this->__load();
        return parent::setEdit($datetime);
    }

    public function getEdit()
    {
        $this->__load();
        return parent::getEdit();
    }

    public function setPwdChange($datetime)
    {
        $this->__load();
        return parent::setPwdChange($datetime);
    }

    public function getPwdChange()
    {
        $this->__load();
        return parent::getPwdChange();
    }

    public function setRole($role)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setDue($datetime)
    {
        $this->__load();
        return parent::setDue($datetime);
    }

    public function getDue()
    {
        $this->__load();
        return parent::getDue();
    }

    public function isDue()
    {
        $this->__load();
        return parent::isDue();
    }

    public function setLastLogin($datetime)
    {
        $this->__load();
        return parent::setLastLogin($datetime);
    }

    public function getLastLogin()
    {
        $this->__load();
        return parent::getLastLogin();
    }

    public function setFirstLogin($datetime)
    {
        $this->__load();
        return parent::setFirstLogin($datetime);
    }

    public function getFirstLogin()
    {
        $this->__load();
        return parent::getFirstLogin();
    }

    public function setActive($active)
    {
        $this->__load();
        return parent::setActive($active);
    }

    public function isActive()
    {
        $this->__load();
        return parent::isActive();
    }

    public function setVerified($verified)
    {
        $this->__load();
        return parent::setVerified($verified);
    }

    public function isVerified()
    {
        $this->__load();
        return parent::isVerified();
    }

    public function getShortName()
    {
        $this->__load();
        return parent::getShortName();
    }

    public function getCompleteName()
    {
        $this->__load();
        return parent::getCompleteName();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function populate($data)
    {
        $this->__load();
        return parent::populate($data);
    }

    public function exchangeArray($data)
    {
        $this->__load();
        return parent::exchangeArray($data);
    }

    public function getArrayCopy()
    {
        $this->__load();
        return parent::getArrayCopy();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'firstname', 'lastname', 'nickname', 'sex', 'birthday', 'anonym', 'username', 'password', 'email', 'verifyString', 'verified', 'active', 'pwdChange', 'edit', 'lastLogin', 'firstLogin', 'created', 'due', 'role');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}